{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "api-slate-operation-docs",
  "type": "registry:file",
  "title": "Operation",
  "description": "API reference for operations in Plate.",
  "files": [
    {
      "path": "../../docs/api/slate/operation.mdx",
      "content": "---\ntitle: Operation\ndescription: API reference for operations in Plate.\n---\n\nAn Operation is the lowest-level instructions that Plate editors use to apply changes to their internal state. Representing all changes as operations is what allows Plate editors to easily implement history, collaboration, and other features.\n\n```typescript\nexport type Operation<N extends Descendant = Descendant> =\n  | NodeOperation<N>\n  | SelectionOperation\n  | TextOperation;\n```\n\n## `OperationApi`\n\n### `isNodeOperation`\n\nCheck if a value is a `NodeOperation` object.\n\n<API name=\"isNodeOperation\">\n<APIParameters>\n  <APIItem name=\"value\" type=\"any\">\n    The value to check.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"boolean\">\n  `true` if the value is a node operation.\n</APIReturns>\n</API>\n\n### `inverse`\n\nInvert an operation, returning a new operation that will exactly undo the original when applied.\n\n<API name=\"inverse\">\n<APIParameters>\n  <APIItem name=\"op\" type=\"Operation\">\n    The operation to invert.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"Operation\">\n  A new operation that undoes the original operation.\n</APIReturns>\n</API>\n\n### `isOperation`\n\nCheck if a value is an `Operation` object.\n\n<API name=\"isOperation\">\n<APIParameters>\n  <APIItem name=\"value\" type=\"any\">\n    The value to check.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"boolean\">\n  `true` if the value is an operation.\n</APIReturns>\n</API>\n\n### `isOperationList`\n\nCheck if a value is a list of `Operation` objects.\n\n<API name=\"isOperationList\">\n<APIParameters>\n  <APIItem name=\"value\" type=\"any\">\n    The value to check.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"boolean\">\n  `true` if the value is an array of operations.\n</APIReturns>\n</API>\n\n### `isSelectionOperation`\n\nCheck if a value is a `SelectionOperation` object.\n\n<API name=\"isSelectionOperation\">\n<APIParameters>\n  <APIItem name=\"value\" type=\"any\">\n    The value to check.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"boolean\">\n  `true` if the value is a selection operation.\n</APIReturns>\n</API>\n\n### `isTextOperation`\n\nCheck if a value is a `TextOperation` object.\n\n<API name=\"isTextOperation\">\n<APIParameters>\n  <APIItem name=\"value\" type=\"any\">\n    The value to check.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"boolean\">\n  `true` if the value is a text operation.\n</APIReturns>\n</API>\n\n## Types\n\n### `Operation`\n\n```ts\nexport type Operation<N extends Descendant = Descendant> =\n  | NodeOperation<N>\n  | SelectionOperation\n  | TextOperation;\n```\n\n### `NodeOperation`\n\nA node operation modifies a node.\n\n```ts\nexport type NodeOperation<N extends Descendant = Descendant> =\n  | InsertNodeOperation<N>\n  | MergeNodeOperation<N>\n  | MoveNodeOperation\n  | RemoveNodeOperation<N>\n  | SetNodeOperation<N>\n  | SplitNodeOperation<N>;\n```\n\n### `SelectionOperation`\n\nA selection operation modifies the selection.\n\n```ts\nexport type SelectionOperation = SetSelectionOperation;\n```\n\n### `TextOperation`\n\nA text operation modifies text content.\n\n```ts\nexport type TextOperation = InsertTextOperation | RemoveTextOperation;\n```\n\n### `InsertNodeOperation`\n\n<API name=\"InsertNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"node\" type=\"N\">\n    The node to insert.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path to insert at.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'insert_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `MergeNodeOperation`\n\n<API name=\"MergeNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the node to merge.\n  </APIItem>\n  <APIItem name=\"position\" type=\"number\">\n    The position to merge at.\n  </APIItem>\n  <APIItem name=\"properties\" type=\"Partial<NodeProps<N>>\">\n    The properties of the merged node.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'merge_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `MoveNodeOperation`\n\n<API name=\"MoveNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"newPath\" type=\"Path\">\n    The new path to move to.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the node to move.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'move_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `RemoveNodeOperation`\n\n<API name=\"RemoveNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"node\" type=\"N\">\n    The node to remove.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the node.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'remove_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `SetNodeOperation`\n\n<API name=\"SetNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"newProperties\" type=\"Partial<NodeProps<N1>>\">\n    The new properties to set.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the node.\n  </APIItem>\n  <APIItem name=\"properties\" type=\"Partial<NodeProps<N2>>\">\n    The old properties.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'set_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `SplitNodeOperation`\n\n<API name=\"SplitNodeOperation\">\n<APIAttributes>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the node to split.\n  </APIItem>\n  <APIItem name=\"position\" type=\"number\">\n    The position to split at.\n  </APIItem>\n  <APIItem name=\"properties\" type=\"Partial<NodeProps<N>>\">\n    The properties of the new split node.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'split_node'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `SetSelectionOperation`\n\n<API name=\"SetSelectionOperation\">\n<APIAttributes>\n  <APIItem name=\"newProperties\" type=\"Partial<TRange> | TRange | null\">\n    The new selection properties.\n  </APIItem>\n  <APIItem name=\"properties\" type=\"Partial<TRange> | TRange | null\">\n    The old selection properties.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'set_selection'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `InsertTextOperation`\n\n<API name=\"InsertTextOperation\">\n<APIAttributes>\n  <APIItem name=\"offset\" type=\"number\">\n    The offset to insert at.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the text node.\n  </APIItem>\n  <APIItem name=\"text\" type=\"string\">\n    The text to insert.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'insert_text'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n### `RemoveTextOperation`\n\n<API name=\"RemoveTextOperation\">\n<APIAttributes>\n  <APIItem name=\"offset\" type=\"number\">\n    The offset to remove from.\n  </APIItem>\n  <APIItem name=\"path\" type=\"Path\">\n    The path of the text node.\n  </APIItem>\n  <APIItem name=\"text\" type=\"string\">\n    The text being removed.\n  </APIItem>\n  <APIItem name=\"type\" type=\"'remove_text'\">\n    The operation type.\n  </APIItem>\n</APIAttributes>\n</API>\n\n",
      "type": "registry:file",
      "target": "content/docs/plate/api/slate/operation.mdx"
    }
  ]
}