{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-align-docs",
  "type": "registry:file",
  "title": "Text Align",
  "description": "Documentation for Text Align",
  "files": [
    {
      "path": "../../docs/(plugins)/(styles)/text-align.mdx",
      "content": "---\ntitle: Text Align\ndocs:\n  - route: /docs/components/align-toolbar-button\n    title: Align Toolbar Button\n---\n\n<ComponentPreview name=\"align-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Apply text alignment to block elements like paragraphs and headings.\n- Supports left, right, center, and justify alignment.\n- Injects an `align` prop into targeted block elements.\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add text alignment functionality is with the `AlignKit`, which includes pre-configured `TextAlignPlugin` targeting paragraph, heading, image, and media elements.\n\n<ComponentSource name=\"align-kit\" />\n\n- Configures `Paragraph`, `Heading`, `Image`, and `Media` elements to support the `align` property.\n- Provides alignment options: `start`, `left`, `center`, `right`, `end`, `justify`.\n\n### Add Kit\n\nAdd the kit to your plugins:\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { AlignKit } from '@/components/editor/plugins/align-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...AlignKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/basic-styles\n```\n\n### Add Plugin\n\nInclude `TextAlignPlugin` in your Plate plugins array when creating the editor.\n\n```tsx\nimport { TextAlignPlugin } from '@platejs/basic-styles/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    TextAlignPlugin,\n  ],\n});\n```\n\n### Configure Plugin\n\nYou can configure the `TextAlignPlugin` to target specific elements and define alignment options.\n\n```tsx\nimport { TextAlignPlugin } from '@platejs/basic-styles/react';\nimport { KEYS } from 'platejs';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    TextAlignPlugin.configure({\n      inject: {\n        nodeProps: {\n          nodeKey: 'align',\n          defaultNodeValue: 'start',\n          styleKey: 'textAlign',\n          validNodeValues: ['start', 'left', 'center', 'right', 'end', 'justify'],\n        },\n        targetPlugins: [...KEYS.heading, KEYS.p],\n      },\n    }),\n  ],\n});\n```\n\n- `inject.nodeProps.nodeKey`: The property name injected into target elements (`align` by default). Set to `'textAlign'` if you prefer that prop name.\n- `inject.nodeProps.defaultNodeValue`: Sets the default alignment (`start`).\n- `inject.nodeProps.styleKey`: Maps the injected prop to the CSS `textAlign` property.\n- `inject.nodeProps.validNodeValues`: Defines valid alignment values for UI controls.\n- `inject.targetPlugins`: An array of plugin keys indicating which element types will receive the alignment prop.\n\n### Add Toolbar Button\n\nYou can add [`AlignToolbarButton`](/docs/components/align-toolbar-button) to your [Toolbar](/docs/toolbar) to control text alignment.\n\n</Steps>\n\n## Plugins\n\n### `TextAlignPlugin`\n\nPlugin for aligning text within block elements. It injects an `align` prop into the elements specified by `inject.targetPlugins`.\n\n<API name=\"TextAlignPlugin\">\n<APIOptions type=\"object\">\n  <APIItem name=\"inject.nodeProps.nodeKey\" type=\"string\" optional>\n    The property name injected into target elements.\n    - **Default:** `'align'`\n  </APIItem>\n  <APIItem name=\"inject.nodeProps.defaultNodeValue\" type=\"string\" optional>\n    Default text alignment value.\n    - **Default:** `'start'`\n  </APIItem>\n  <APIItem name=\"inject.nodeProps.styleKey\" type=\"string\" optional>\n    CSS property name for styling.\n    - **Default:** `'textAlign'`\n  </APIItem>\n  <APIItem name=\"inject.nodeProps.validNodeValues\" type=\"string[]\" optional>\n    Array of valid alignment values.\n    - **Default:** `['start', 'left', 'center', 'right', 'end', 'justify']`\n  </APIItem>\n  <APIItem name=\"inject.targetPlugins\" type=\"string[]\" optional>\n    Array of plugin keys to target for alignment injection.\n    - **Default:** `['p']`\n  </APIItem>\n</APIOptions>\n</API>\n\n## Transforms\n\n### `tf.textAlign.setNodes`\n\nSets the alignment for the selected block nodes that are configured as targets for this plugin.\n\n<API name=\"tf.textAlign.setNodes\">\n<APIParameters>\n<APIItem name=\"value\" type=\"string\">\nThe alignment value (e.g., `'left'`, `'center'`, `'right'`, `'justify'`).\n</APIItem>\n<APIItem name=\"options\" type=\"SetNodesOptions\" optional>\nOptions for the `setNodes` function.\n</APIItem>\n</APIParameters>\n</API>",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(styles)/text-align.mdx"
    }
  ]
}