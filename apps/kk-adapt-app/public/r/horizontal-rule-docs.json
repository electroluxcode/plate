{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "horizontal-rule-docs",
  "type": "registry:file",
  "title": "Horizontal Rule",
  "description": "Documentation for Horizontal Rule",
  "files": [
    {
      "path": "../../docs/(plugins)/(elements)/horizontal-rule.mdx",
      "content": "---\ntitle: Horizontal Rule\ndocs:\n  - route: /docs/components/hr-node\n    title: Hr Element\n---\n\n<ComponentPreview name=\"basic-blocks-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Insert horizontal lines to separate content or indicate topic shifts\n- Type three dashes (`---`) at a new line start to transform into a horizontal rule\n- Renders as `<hr>` HTML element by default\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add the horizontal rule plugin is with the `BasicBlocksKit`, which includes pre-configured `HorizontalRulePlugin` along with other basic block elements and their [Plate UI](/docs/installation/plate-ui) components.\n\n<ComponentSource name=\"basic-blocks-kit\" />\n\n- [`HrElement`](/docs/components/hr-node): Renders horizontal rule elements.\n\n### Add Kit\n\nAdd the kit to your plugins:\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { BasicBlocksKit } from '@/components/editor/plugins/basic-blocks-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...BasicBlocksKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/basic-nodes\n```\n\n### Add Plugin\n\nInclude `HorizontalRulePlugin` in your Plate plugins array when creating the editor.\n\n```tsx\nimport { HorizontalRulePlugin } from '@platejs/basic-nodes/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    HorizontalRulePlugin,\n  ],\n});\n```\n\n### Configure Plugin\n\nYou can configure the `HorizontalRulePlugin` with autoformat rules to automatically convert typed patterns like `---` into horizontal rules.\n\n```tsx\nimport { insertNodes, setNodes, KEYS } from 'platejs';\nimport { AutoformatPlugin } from '@platejs/autoformat';\nimport { HorizontalRulePlugin } from '@platejs/basic-nodes/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    HorizontalRulePlugin,\n    AutoformatPlugin.configure({\n      options: {\n        rules: [\n          {\n            mode: 'block',\n            type: KEYS.hr,\n            match: ['---', 'â€”-', '___ '],\n            format: (editor) => {\n              setNodes(editor, { type: KEYS.hr });\n              insertNodes(editor, {\n                type: KEYS.p,\n                children: [{ text: '' }],\n              });\n            },\n          },\n        ],\n      },\n    }),\n  ],\n});\n```\n\n- `AutoformatPlugin`: Automatically converts typed patterns (like `---`) into horizontal rules.\n\n### Insert Toolbar Button\n\nYou can add this item to the [Insert Toolbar Button](/docs/toolbar#insert-toolbar-button) to insert horizontal rules:\n\n```tsx\n{\n  icon: <MinusIcon />,\n  label: 'Divider',\n  value: KEYS.hr,\n}\n```\n\n</Steps>\n\n## Plugins\n\n### `HorizontalRulePlugin`\n\nPlugin for inserting horizontal rules to separate content. Horizontal rules are void elements that render as `<hr>` tags by default.",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(elements)/horizontal-rule.mdx"
    }
  ]
}