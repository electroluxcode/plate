{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "api-floating-docs",
  "type": "registry:file",
  "title": "Floating",
  "description": "API reference for floating UI components and hooks.",
  "files": [
    {
      "path": "../../docs/api/floating.mdx",
      "content": "---\ntitle: Floating\ndescription: API reference for floating UI components and hooks.\n---\n\n<PackageInfo>\n\n## Features\n\n- Virtual floating elements that follow cursor position\n- Floating toolbar that appears on text selection\n- Built on top of Floating UI\n- Customizable positioning and behavior\n- Automatic updates on scroll and resize\n\n</PackageInfo>\n\n## Installation\n\n```bash\nnpm install @platejs/floating\n```\n\n## API Hooks\n\n### `useVirtualFloating`\n\nCreates a floating element with a controlled virtual element, typically used to follow cursor position.\n\n<API name=\"useVirtualFloating\">\n<APIOptions type=\"UseVirtualFloatingOptions\">\n  <APIItem name=\"getBoundingClientRect\" type=\"() => ClientRectObject\" optional>\n    Function to get the bounding client rect.\n    - **Default:** Returns a zero-sized rect at (0,0)\n  </APIItem>\n  <APIItem name=\"open\" type=\"boolean\" optional>\n    Controls visibility of the floating element.\n  </APIItem>\n  <APIItem name=\"whileElementsMounted\" type=\"function\" optional>\n    Callback when elements are mounted.\n    - **Default:** `autoUpdate` (updates on scroll and resize)\n  </APIItem>\n</APIOptions>\n\n<APIReturns type=\"object\">\n  <APIItem name=\"style\" type=\"React.CSSProperties\">\n    Style object to apply to the floating element.\n  </APIItem>\n  <APIItem name=\"virtualElementRef\" type=\"React.MutableRefObject\">\n    Reference to the virtual element.\n  </APIItem>\n  <APIItem name=\"refs\" type=\"object\">\n    References for floating UI positioning.\n  </APIItem>\n  <APIItem name=\"update\" type=\"() => void\">\n    Function to manually update positioning.\n  </APIItem>\n</APIReturns>\n</API>\n\n### `useFloatingToolbar`\n\nCreates a floating toolbar that appears when text is selected in the editor.\n\n<API name=\"useFloatingToolbar\">\n<APIOptions type=\"FloatingToolbarState\">\n  <APIItem name=\"floatingOptions\" type=\"UseVirtualFloatingOptions\" optional>\n    Options passed to `useVirtualFloating`.\n  </APIItem>\n  <APIItem name=\"hideToolbar\" type=\"boolean\" optional>\n    Force hide the toolbar.\n  </APIItem>\n  <APIItem name=\"showWhenReadOnly\" type=\"boolean\" optional>\n    Show toolbar in read-only mode.\n  </APIItem>\n</APIOptions>\n\n<APIReturns type=\"object\">\n  <APIItem name=\"clickOutsideRef\" type=\"React.RefObject\">\n    Ref to detect clicks outside the toolbar.\n  </APIItem>\n  <APIItem name=\"hidden\" type=\"boolean\">\n    Whether the toolbar should be hidden.\n  </APIItem>\n  <APIItem name=\"props\" type=\"object\">\n    Props to spread on the toolbar element.\n  </APIItem>\n  <APIItem name=\"ref\" type=\"React.RefObject\">\n    Ref to attach to the toolbar element.\n  </APIItem>\n</APIReturns>\n</API>\n\n## API\n\n### `getBoundingClientRect`\n\nGets the bounding client rectangle for a location or array of locations in the editor.\n\n<API name=\"getBoundingClientRect\">\n<APIParameters>\n  <APIItem name=\"editor\" type=\"Editor\">\n    The editor instance.\n  </APIItem>\n  <APIItem name=\"at\" type=\"Location | Location[]\" optional>\n    The location(s) to get the bounding rectangle for. If not provided, uses the current editor selection.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"DOMRect | undefined\">\n  The merged bounding client rectangle of all specified locations, or undefined if no valid rectangles found.\n</APIReturns>\n</API>\n\n### `getDOMSelectionBoundingClientRect`\n\n<API name=\"getDOMSelectionBoundingClientRect\">\n<APIReturns type=\"ClientRectObject\">\n  The bounding client rectangle of the DOM selection. Returns a zero-sized rect at (0,0) if no selection exists.\n</APIReturns>\n</API>\n\n### `getRangeBoundingClientRect`\n\nGets the bounding client rectangle for a specific Plate range.\n\n<API name=\"getRangeBoundingClientRect\">\n<APIParameters>\n  <APIItem name=\"editor\" type=\"Editor\">\n    The editor instance.\n  </APIItem>\n  <APIItem name=\"at\" type=\"TRange | null\">\n    The Plate range to get the bounding rectangle for.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"ClientRectObject\">\n  The bounding client rectangle of the range. Returns a zero-sized rect at (0,0) if the range is null or invalid.\n</APIReturns>\n</API>\n\n### `getSelectionBoundingClientRect`\n\nGets the bounding client rectangle of the current editor selection.\n\n<API name=\"getSelectionBoundingClientRect\">\n<APIParameters>\n  <APIItem name=\"editor\" type=\"PlateEditor\">\n    The editor instance.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"ClientRectObject\">\n  The bounding client rectangle of the selection. Returns a zero-sized rect at (0,0) if the selection is not expanded.\n</APIReturns>\n</API>",
      "type": "registry:file",
      "target": "content/docs/plate/api/floating.mdx"
    }
  ]
}