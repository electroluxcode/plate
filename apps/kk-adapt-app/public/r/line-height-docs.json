{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "line-height-docs",
  "type": "registry:file",
  "title": "Line Height",
  "description": "Documentation for Line Height",
  "files": [
    {
      "path": "../../docs/(plugins)/(styles)/line-height.mdx",
      "content": "---\ntitle: Line Height\ndocs:\n  - route: /docs/components/line-height-toolbar-button\n    title: Line Height Toolbar Button\n---\n\n<ComponentPreview name=\"line-height-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Apply custom line height to block elements like paragraphs and headings.\n- Injects a `lineHeight` prop into targeted block elements.\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add line height functionality is with the `LineHeightKit`, which includes pre-configured `LineHeightPlugin` targeting paragraph and heading elements.\n\n<ComponentSource name=\"line-height-kit\" />\n\n- Configures `Paragraph` and `Heading` elements (H1-H6) to support the `lineHeight` property.\n- Provides a default line height of `1.5` and valid values `[1, 1.2, 1.5, 2, 3]`.\n\n### Add Kit\n\nAdd the kit to your plugins:\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { LineHeightKit } from '@/components/editor/plugins/line-height-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...LineHeightKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/basic-styles\n```\n\n### Add Plugin\n\nInclude `LineHeightPlugin` in your Plate plugins array when creating the editor.\n\n```tsx\nimport { LineHeightPlugin } from '@platejs/basic-styles/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    LineHeightPlugin,\n  ],\n});\n```\n\n### Configure Plugin\n\nYou can configure the `LineHeightPlugin` to target specific elements and define default or valid line height values.\n\n```tsx\nimport { LineHeightPlugin } from '@platejs/basic-styles/react';\nimport { KEYS } from 'platejs/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    LineHeightPlugin.configure({\n      inject: {\n        nodeProps: {\n          defaultNodeValue: 1.5,\n          validNodeValues: [1, 1.2, 1.5, 2, 3],\n        },\n        targetPlugins: [KEYS.p, KEYS.h1, KEYS.h2, KEYS.h3],\n      },\n    }),\n  ],\n});\n```\n\n- `inject.nodeProps.defaultNodeValue`: Sets a default line height (e.g., `1.5`).\n- `inject.nodeProps.validNodeValues`: Defines a list of common line height values, useful for toolbar dropdowns.\n- `inject.targetPlugins`: An array of plugin keys (e.g., `KEYS.p`, `KEYS.h1`) indicating which element types will receive the `lineHeight` prop.\n\n### Add Toolbar Button\n\nYou can add [`LineHeightToolbarButton`](/docs/components/line-height-toolbar-button) to your [Toolbar](/docs/toolbar) to control line height.\n\n</Steps>\n\n## Plugins\n\n### `LineHeightPlugin`\n\nPlugin for setting line height on blocks. It injects a `lineHeight` prop into the elements specified by `inject.targetPlugins`.\n\n<API name=\"LineHeightPlugin\">\n<APIOptions type=\"object\">\n  <APIItem name=\"inject.nodeProps.defaultNodeValue\" type=\"number\" optional>\n    Default line height value.\n  </APIItem>\n  <APIItem name=\"inject.nodeProps.validNodeValues\" type=\"number[]\" optional>\n    Array of valid line height values.\n  </APIItem>\n  <APIItem name=\"inject.targetPlugins\" type=\"string[]\" optional>\n    Array of plugin keys to target for line height injection.\n    - **Default:** `['p']`\n  </APIItem>\n</APIOptions>\n</API>\n\n## Transforms\n\n### `tf.lineHeight.setNodes`\n\nSets the line height for selected nodes in the editor.\n\n<API name=\"tf.lineHeight.setNodes\">\n<APIParameters>\n<APIItem name=\"value\" type=\"number\">\nThe line height value.\n</APIItem>\n<APIItem name=\"options\" type=\"SetNodesOptions\" optional>\nOptions for the `setNodes` function.\n</APIItem>\n</APIParameters>\n</API>\n",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(styles)/line-height.mdx"
    }
  ]
}