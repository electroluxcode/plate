{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blockquote-docs",
  "type": "registry:file",
  "title": "Blockquote",
  "description": "Documentation for Blockquote",
  "files": [
    {
      "path": "../../docs/(plugins)/(elements)/blockquote.mdx",
      "content": "---\ntitle: Blockquote\ndocs:\n  - route: /docs/components/blockquote-node\n    title: Blockquote Element\n---\n\n<ComponentPreview name=\"basic-blocks-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Create blockquotes to emphasize important information or highlight quotes from external sources.\n- Renders as `<blockquote>` HTML element by default.\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add the blockquote plugin is with the `BasicBlocksKit`, which includes pre-configured `BlockquotePlugin` along with other basic block elements and their [Plate UI](/docs/installation/plate-ui) components.\n\n<ComponentSource name=\"basic-blocks-kit\" />\n\n- [`BlockquoteElement`](/docs/components/blockquote-node): Renders blockquote elements.\n\n### Add Kit\n\nAdd the kit to your plugins:\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { BasicBlocksKit } from '@/components/editor/plugins/basic-blocks-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...BasicBlocksKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/basic-nodes\n```\n\n### Add Plugin\n\nInclude `BlockquotePlugin` in your Plate plugins array when creating the editor.\n\n```tsx\nimport { BlockquotePlugin } from '@platejs/basic-nodes/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    BlockquotePlugin,\n  ],\n});\n```\n\n### Configure Plugin\n\nYou can configure the `BlockquotePlugin` with options such as a specific rendering component or custom keyboard shortcuts.\n\n```tsx\nimport { BlockquotePlugin } from '@platejs/basic-nodes/react';\nimport { createPlateEditor } from 'platejs/react';\nimport { BlockquoteElement } from '@/components/ui/blockquote-node';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    BlockquotePlugin.configure({\n      node: { component: BlockquoteElement },\n      shortcuts: { toggle: 'mod+shift+.' },\n    }),\n  ],\n});\n```\n\n- `node.component`: Assigns [`BlockquoteElement`](/docs/components/blockquote-node) to render blockquote elements.\n- `shortcuts.toggle`: Defines a keyboard [shortcut](/docs/plugin-shortcuts) to toggle blockquote formatting.\n\n### Turn Into Toolbar Button\n\nYou can add blockquote to the [Turn Into Toolbar Button](/docs/toolbar#turn-into-toolbar-button) to toggle blockquotes:\n\n```tsx\n{\n  icon: <QuoteIcon />,\n  label: 'Quote',\n  value: KEYS.blockquote,\n}\n```\n\n### Insert Toolbar Button\n\nYou can add blockquote to the [Insert Toolbar Button](/docs/toolbar#insert-toolbar-button) to insert blockquotes:\n\n```tsx\n{\n  icon: <QuoteIcon />,\n  label: 'Quote',\n  value: KEYS.blockquote,\n}\n```\n\n</Steps>\n\n## Plugins\n\n### `BlockquotePlugin`\n\nPlugin for blockquote elements. Renders as `<blockquote>` HTML element by default.\n\n## Transforms\n\n### `tf.blockquote.toggle`\n\nToggles the current block between blockquote and paragraph. If the block is already a blockquote, it reverts to a paragraph. If it's a paragraph or another block type, it converts to a blockquote.",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(elements)/blockquote.mdx"
    }
  ]
}