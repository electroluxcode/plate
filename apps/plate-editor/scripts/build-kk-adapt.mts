#!/usr/bin/env node

import { build } from 'esbuild';
import { glob } from 'glob';
import { resolve, dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const projectRoot = resolve(__dirname, '..');
const outputDir = resolve(projectRoot, 'dist');

async function buildKKAdapt() {
  try {
    console.log('üî® ÂºÄÂßãÊûÑÂª∫ kk-adapt Â∫ì...');

    // ÊûÑÂª∫‰∏ªÂÖ•Âè£Êñá‰ª∂
    await build({
      entryPoints: [resolve(projectRoot, 'kk-adapt-export.ts')],
      bundle: true,
      outdir: outputDir,
      format: 'esm',
      target: ['es2020'],
      platform: 'browser',
      sourcemap: true,
      minify: true,
      external: [
        // Â§ñÈÉ®‰æùËµñÔºå‰∏çÊâìÂåÖËøõÂ∫ì‰∏≠
        'react',
        'react-dom',
        'next',
        '@platejs/*',
        '@udecode/*',
        'framer-motion',
        'lucide-react',
        'class-variance-authority',
        'tailwind-merge',
        'clsx',
        'cmdk',
        'jotai',
        'fumadocs-core',
        'next-themes',
        'vaul',
        'sonner',
        'uploadthing',
        'react-hook-form',
        '@hookform/resolvers',
        'zod',
        'date-fns',
        'react-day-picker',
        'react-resizable-panels',
        'react-dnd',
        'react-dnd-html5-backend',
        'react-textarea-autosize',
        'react-wrap-balancer',
        'react-syntax-highlighter',
        'react-markdown',
        'remark-gfm',
        'remark-emoji',
        'remark-math',
        'rehype-slug',
        'rehype-autolink-headings',
        'rehype-pretty-code',
        'lowlight',
        'prismjs',
        'html2canvas-pro',
        'pdf-lib',
        'faker',
        'lodash',
        'nuqs',
        'node-fetch',
        'dotenv',
        'y-webrtc',
        '@slate-yjs/react',
        '@hocuspocus/provider',
        '@radix-ui/*',
        '@ariakit/react',
        '@tabler/icons-react',
        '@next/third-parties',
        '@ai-sdk/openai',
        'ai',
        'use-file-picker',
        'react-lite-youtube-embed',
        'react-player',
        'react-tweet',
        'sass',
        'tailwind-scrollbar-hide',
        'tw-animate-css',
        'autoprefixer',
        'postcss',
        'tailwindcss',
        'kleur',
        'listr2',
        'ora',
        'puppeteer',
        'rehype',
        'remark',
        'remark-code-import',
        'rimraf',
        'shiki',
        'ts-node',
        'tsx',
        'typescript',
        'unist-builder',
        'unist-util-visit',
        'mdast-util-toc',
        'glob',
        'concurrently',
        'contentlayer2',
        'next-contentlayer2',
        'shadcn',
        'shadcn-prose'
      ],
      define: {
        'process.env.NODE_ENV': '"production"',
        'global': 'globalThis'
      },
      banner: {
        js: `/**
 * kk-adapt-export
 * @version ${new Date().toISOString().split('T')[0]}
 * @license MIT
 */`
      },
      footer: {
        js: '// Built with esbuild'
      }
    });

    // ÊûÑÂª∫ CommonJS ÁâàÊú¨
    await build({
      entryPoints: [resolve(projectRoot, 'kk-adapt-export.ts')],
      bundle: true,
      outdir: outputDir,
      format: 'cjs',
      target: ['es2020'],
      platform: 'browser',
      sourcemap: true,
      minify: true,
      external: [
        'react',
        'react-dom',
        'next',
        '@platejs/*',
        '@udecode/*',
        'framer-motion',
        'lucide-react',
        'class-variance-authority',
        'tailwind-merge',
        'clsx',
        'cmdk',
        'jotai',
        'fumadocs-core',
        'next-themes',
        'vaul',
        'sonner',
        'uploadthing',
        'react-hook-form',
        '@hookform/resolvers',
        'zod',
        'date-fns',
        'react-day-picker',
        'react-resizable-panels',
        'react-dnd',
        'react-dnd-html5-backend',
        'react-textarea-autosize',
        'react-wrap-balancer',
        'react-syntax-highlighter',
        'react-markdown',
        'remark-gfm',
        'remark-emoji',
        'remark-math',
        'rehype-slug',
        'rehype-autolink-headings',
        'rehype-pretty-code',
        'lowlight',
        'prismjs',
        'html2canvas-pro',
        'pdf-lib',
        'faker',
        'lodash',
        'nuqs',
        'node-fetch',
        'dotenv',
        'y-webrtc',
        '@slate-yjs/react',
        '@hocuspocus/provider',
        '@radix-ui/*',
        '@ariakit/react',
        '@tabler/icons-react',
        '@next/third-parties',
        '@ai-sdk/openai',
        'ai',
        'use-file-picker',
        'react-lite-youtube-embed',
        'react-player',
        'react-tweet',
        'sass',
        'tailwind-scrollbar-hide',
        'tw-animate-css',
        'autoprefixer',
        'postcss',
        'tailwindcss',
        'kleur',
        'listr2',
        'ora',
        'puppeteer',
        'rehype',
        'remark',
        'remark-code-import',
        'rimraf',
        'shiki',
        'ts-node',
        'tsx',
        'typescript',
        'unist-builder',
        'unist-util-visit',
        'mdast-util-toc',
        'glob',
        'concurrently',
        'contentlayer2',
        'next-contentlayer2',
        'shadcn',
        'shadcn-prose'
      ],
      define: {
        'process.env.NODE_ENV': '"production"',
        'global': 'globalThis'
      },
      banner: {
        js: `/**
 * kk-adapt-export
 * @version ${new Date().toISOString().split('T')[0]}
 * @license MIT
 */`
      },
      footer: {
        js: '// Built with esbuild'
      },
      outExtension: { '.js': '.cjs' }
    });

    // ÊûÑÂª∫ UMD ÁâàÊú¨
    await build({
      entryPoints: [resolve(projectRoot, 'kk-adapt-export.ts')],
      bundle: true,
      outdir: outputDir,
      format: 'iife',
      target: ['es2020'],
      platform: 'browser',
      sourcemap: true,
      minify: true,
      globalName: 'KKAdapt',
      external: [
        'react',
        'react-dom',
        'next',
        '@platejs/*',
        '@udecode/*',
        'framer-motion',
        'lucide-react',
        'class-variance-authority',
        'tailwind-merge',
        'clsx',
        'cmdk',
        'jotai',
        'fumadocs-core',
        'next-themes',
        'vaul',
        'sonner',
        'uploadthing',
        'react-hook-form',
        '@hookform/resolvers',
        'zod',
        'date-fns',
        'react-day-picker',
        'react-resizable-panels',
        'react-dnd',
        'react-dnd-html5-backend',
        'react-textarea-autosize',
        'react-wrap-balancer',
        'react-syntax-highlighter',
        'react-markdown',
        'remark-gfm',
        'remark-emoji',
        'remark-math',
        'rehype-slug',
        'rehype-autolink-headings',
        'rehype-pretty-code',
        'lowlight',
        'prismjs',
        'html2canvas-pro',
        'pdf-lib',
        'faker',
        'lodash',
        'nuqs',
        'node-fetch',
        'dotenv',
        'y-webrtc',
        '@slate-yjs/react',
        '@hocuspocus/provider',
        '@radix-ui/*',
        '@ariakit/react',
        '@tabler/icons-react',
        '@next/third-parties',
        '@ai-sdk/openai',
        'ai',
        'use-file-picker',
        'react-lite-youtube-embed',
        'react-player',
        'react-tweet',
        'sass',
        'tailwind-scrollbar-hide',
        'tw-animate-css',
        'autoprefixer',
        'postcss',
        'tailwindcss',
        'kleur',
        'listr2',
        'ora',
        'puppeteer',
        'rehype',
        'remark',
        'remark-code-import',
        'rimraf',
        'shiki',
        'ts-node',
        'tsx',
        'typescript',
        'unist-builder',
        'unist-util-visit',
        'mdast-util-toc',
        'glob',
        'concurrently',
        'contentlayer2',
        'next-contentlayer2',
        'shadcn',
        'shadcn-prose'
      ],
      define: {
        'process.env.NODE_ENV': '"production"',
        'global': 'globalThis'
      },
      banner: {
        js: `/**
 * kk-adapt-export
 * @version ${new Date().toISOString().split('T')[0]}
 * @license MIT
 */`
      },
      footer: {
        js: '// Built with esbuild'
      },
      outExtension: { '.js': '.umd.js' }
    });

    // ÁîüÊàêÁ±ªÂûãÂ£∞ÊòéÊñá‰ª∂
    await build({
      entryPoints: [resolve(projectRoot, 'kk-adapt-export.ts')],
      bundle: true,
      outdir: outputDir,
      format: 'esm',
      target: ['es2020'],
      platform: 'browser',
      sourcemap: false,
      minify: false,
      external: [
        'react',
        'react-dom',
        'next',
        '@platejs/*',
        '@udecode/*',
        'framer-motion',
        'lucide-react',
        'class-variance-authority',
        'tailwind-merge',
        'clsx',
        'cmdk',
        'jotai',
        'fumadocs-core',
        'next-themes',
        'vaul',
        'sonner',
        'uploadthing',
        'react-hook-form',
        '@hookform/resolvers',
        'zod',
        'date-fns',
        'react-day-picker',
        'react-resizable-panels',
        'react-dnd',
        'react-dnd-html5-backend',
        'react-textarea-autosize',
        'react-wrap-balancer',
        'react-syntax-highlighter',
        'react-markdown',
        'remark-gfm',
        'remark-emoji',
        'remark-math',
        'rehype-slug',
        'rehype-autolink-headings',
        'rehype-pretty-code',
        'lowlight',
        'prismjs',
        'html2canvas-pro',
        'pdf-lib',
        'faker',
        'lodash',
        'nuqs',
        'node-fetch',
        'dotenv',
        'y-webrtc',
        '@slate-yjs/react',
        '@hocuspocus/provider',
        '@radix-ui/*',
        '@ariakit/react',
        '@tabler/icons-react',
        '@next/third-parties',
        '@ai-sdk/openai',
        'ai',
        'use-file-picker',
        'react-lite-youtube-embed',
        'react-player',
        'react-tweet',
        'sass',
        'tailwind-scrollbar-hide',
        'tw-animate-css',
        'autoprefixer',
        'postcss',
        'tailwindcss',
        'kleur',
        'listr2',
        'ora',
        'puppeteer',
        'rehype',
        'remark',
        'remark-code-import',
        'rimraf',
        'shiki',
        'ts-node',
        'tsx',
        'typescript',
        'unist-builder',
        'unist-util-visit',
        'mdast-util-toc',
        'glob',
        'concurrently',
        'contentlayer2',
        'next-contentlayer2',
        'shadcn',
        'shadcn-prose'
      ],
      define: {
        'process.env.NODE_ENV': '"production"',
        'global': 'globalThis'
      },
      outExtension: { '.js': '.d.ts' }
    });

    console.log('‚úÖ kk-adapt Â∫ìÊûÑÂª∫ÂÆåÊàêÔºÅ');
    console.log(`üìÅ ËæìÂá∫ÁõÆÂΩï: ${outputDir}`);
    console.log('üì¶ ÁîüÊàê‰∫Ü‰ª•‰∏ãÊñá‰ª∂:');
    console.log('   - kk-adapt-export.js (ESM)');
    console.log('   - kk-adapt-export.cjs (CommonJS)');
    console.log('   - kk-adapt-export.umd.js (UMD)');
    console.log('   - kk-adapt-export.d.ts (Á±ªÂûãÂ£∞Êòé)');

  } catch (error) {
    console.error('‚ùå ÊûÑÂª∫Â§±Ë¥•:', error);
    process.exit(1);
  }
}

buildKKAdapt(); 