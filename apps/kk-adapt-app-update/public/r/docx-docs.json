{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "docx-docs",
  "type": "registry:file",
  "title": "Serializing Docx",
  "description": "Documentation for Serializing Docx",
  "files": [
    {
      "path": "../../docs/(plugins)/(serializing)/docx.mdx",
      "content": "---\ntitle: Serializing Docx\n---\n\n<ComponentPreview name=\"docx-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Convert pasted DOCX content to Plate format\n- Clean and normalize DOCX HTML content for Plate compatibility\n- Support for list styles and nested indentation from Word documents\n\n<Callout className=\"my-4\" type=\"note\">\n  Converting a Plate value to DOCX is not yet supported.\n</Callout>\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add DOCX import functionality is with the `DocxKit`, which includes pre-configured `DocxPlugin` and `JuicePlugin` for handling DOCX content and CSS processing.\n\n<ComponentSource name=\"docx-kit\" />\n\n### Add Kit\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { DocxKit } from '@/components/editor/plugins/docx-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...DocxKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/docx @platejs/juice\n```\n\n### Add Plugins\n\n```tsx\nimport { DocxPlugin } from '@platejs/docx';\nimport { JuicePlugin } from '@platejs/juice';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    DocxPlugin,\n    JuicePlugin,\n  ],\n});\n```\n\n### Configure Plugins\n\n```tsx\nimport { DocxPlugin } from '@platejs/docx';\nimport { JuicePlugin } from '@platejs/juice';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    DocxPlugin, // Handles DOCX content transformation\n    JuicePlugin, // Inlines CSS properties into style attributes\n  ],\n});\n```\n\n- `DocxPlugin`: Processes pasted DOCX content and converts it to Plate format\n- `JuicePlugin`: Inlines CSS properties into the `style` attribute for better compatibility\n\n</Steps>\n\n## Usage\n\n### DOCX to Plate\n\nWhen users paste content from Microsoft Word, the DOCX plugin automatically:\n\n1. Detects DOCX content in the clipboard\n2. Cleans and normalizes the HTML structure\n3. Preserves indentation and list formatting\n4. Converts DOCX-specific elements to Plate format\n\nThe plugin works seamlessly with the paste functionality - no additional code is needed once installed.\n\n## Plugins\n\n### DocxPlugin\n\nPlugin for processing DOCX content during paste operations.\n\n### JuicePlugin\n\nPlugin for inlining CSS properties into HTML elements. Converts external CSS styles to inline `style` attributes. This is essential for DOCX processing as it ensures styling information is preserved when content is pasted from Word documents.\n",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(serializing)/docx.mdx"
    }
  ]
}