{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "block-menu-docs",
  "type": "registry:file",
  "title": "Block Menu",
  "description": "Documentation for Block Menu",
  "files": [
    {
      "path": "../../docs/(plugins)/(functionality)/block-menu.mdx",
      "content": "---\ntitle: Block Menu\ndocs:\n  - route: https://pro.platejs.org/docs/examples/block-menu\n    title: Plus\n  - route: /docs/components/block-context-menu\n    title: Block Context Menu\n---\n\n<ComponentPreview name=\"block-menu-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Right-click on blocks to open a context menu.\n- Perform actions on blocks such as turning into different types, duplicating, or deleting.\n- Customizable menu items and actions.\n- Keyboard navigation support.\n- Block selection integration.\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add the block menu is with the `BlockMenuKit`, which includes the pre-configured `BlockMenuPlugin` along with `BlockSelectionPlugin` and their [Plate UI](/docs/installation/plate-ui) components.\n\n<ComponentSource name=\"block-menu-kit\" />\n\n- [`BlockContextMenu`](/docs/components/block-context-menu): Renders the context menu interface.\n\n### Add Kit\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { BlockMenuKit } from '@/components/editor/plugins/block-menu-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...BlockMenuKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/selection\n```\n\n### Add Plugins\n\nThe block menu requires both `BlockSelectionPlugin` and `BlockMenuPlugin` to function properly.\n\n```tsx\nimport { BlockSelectionPlugin, BlockMenuPlugin } from '@platejs/selection/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    BlockSelectionPlugin.configure({\n      options: {\n        enableContextMenu: true,\n      },\n    }),\n    BlockMenuPlugin,\n  ],\n});\n```\n\n### Configure Plugins\n\nConfigure the block menu with a context menu component:\n\n```tsx\nimport { BlockSelectionPlugin, BlockMenuPlugin } from '@platejs/selection/react';\nimport { createPlateEditor } from 'platejs/react';\nimport { BlockContextMenu } from '@/components/ui/block-context-menu';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    BlockSelectionPlugin.configure({\n      options: {\n        enableContextMenu: true,\n      },\n    }),\n    BlockMenuPlugin.configure({\n      render: { aboveEditable: BlockContextMenu },\n    }),\n  ],\n});\n```\n\n- `BlockSelectionPlugin.options.enableContextMenu`: Enables the context menu functionality.\n- `BlockMenuPlugin.render.aboveEditable`: Assigns [`BlockContextMenu`](/docs/components/block-context-menu) to render the context menu.\n\n#### Controlling Context Menu Behavior\n\nTo control the opening of the context menu for specific elements, use the `data-plate-open-context-menu` attribute:\n\n```tsx\n<PlateElement data-plate-open-context-menu={false} {...props}>\n  {children}\n</PlateElement>\n```\n\nThis is commonly used to prevent right-clicking on the padding of the `<Editor />` component from opening the menu.\n\n</Steps>\n\n## Plate Plus\n\n<ComponentPreviewPro name=\"block-menu-pro\" />\n\n## Plugins\n\n### `BlockMenuPlugin`\n\nPlugin for block menu state management and context menu functionality.\n\n## API\n\n### `api.blockMenu.hide`\n\nHides the block menu.\n\n### `api.blockMenu.show`\n\nShows the block menu for a specific block.\n\n<API name=\"show\">\n<APIParameters>\n  <APIItem name=\"id\" type=\"'context' | string\">\n    The ID of the block to show the menu for, or 'context' for the context menu.\n  </APIItem>\n  <APIItem name=\"position\" type=\"{ x: number; y: number }\" optional>\n    The position to show the menu at. If not provided, only the openId is updated.\n  </APIItem>\n</APIParameters>\n</API>\n\n### `api.blockMenu.showContextMenu`\n\nShows the context menu for a specific block and automatically selects that block.\n\n<API name=\"showContextMenu\">\n<APIParameters>\n  <APIItem name=\"blockId\" type=\"string\">\n    The ID of the block to show the context menu for.\n  </APIItem>\n  <APIItem name=\"position\" type=\"{ x: number; y: number }\">\n    The position to show the context menu at.\n  </APIItem>\n</APIParameters>\n</API>\n",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(functionality)/block-menu.mdx"
    }
  ]
}