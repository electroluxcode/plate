{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "equation-docs",
  "type": "registry:file",
  "title": "Equation",
  "description": "Documentation for Equation",
  "files": [
    {
      "path": "../../docs/(plugins)/(elements)/equation.mdx",
      "content": "---\ntitle: Equation\ndocs:\n  - route: https://pro.platejs.org/docs/examples/equation\n    title: Plus\n  - route: /docs/components/equation-node\n    title: Equation Element\n  - route: /docs/components/equation-toolbar-button\n    title: Equation Toolbar Button\n---\n\n<ComponentPreview name=\"equation-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- LaTeX syntax support for complex mathematical expressions\n- Both inline and block equation formats\n- Real-time rendering of equations using KaTeX\n- Easy editing and navigation within equations\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add equation functionality is with the `MathKit`, which includes pre-configured `EquationPlugin` and `InlineEquationPlugin` with [Plate UI](/docs/installation/plate-ui) components.\n\n<ComponentSource name=\"math-kit\" />\n\n- [`EquationElement`](/docs/components/equation-node): Renders block equation elements.\n- [`InlineEquationElement`](/docs/components/equation-node): Renders inline equation elements.\n\n### Add Kit\n\nAdd the kit to your plugins:\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { MathKit } from '@/components/editor/plugins/math-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...MathKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/math\n```\n\n### Add Plugins\n\nInclude the equation plugins in your Plate plugins array when creating the editor.\n\n```tsx\nimport { EquationPlugin, InlineEquationPlugin } from '@platejs/math/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    EquationPlugin,\n    InlineEquationPlugin,\n  ],\n});\n```\n\n### Configure Plugins\n\nConfigure the plugins with custom components to render equation elements.\n\n```tsx\nimport { EquationPlugin, InlineEquationPlugin } from '@platejs/math/react';\nimport { createPlateEditor } from 'platejs/react';\nimport { EquationElement, InlineEquationElement } from '@/components/ui/equation-node';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    EquationPlugin.withComponent(EquationElement),\n    InlineEquationPlugin.withComponent(InlineEquationElement),\n  ],\n});\n```\n\n- `withComponent`: Assigns [`EquationElement`](/docs/components/equation-node) to render block equations and [`InlineEquationElement`](/docs/components/equation-node) to render inline equations.\n\n### Add Toolbar Button\n\nYou can add [`EquationToolbarButton`](/docs/components/equation-toolbar-button) to your [Toolbar](/docs/toolbar) to insert equations.\n\n</Steps>\n\n## Plate Plus\n\n<ComponentPreviewPro name=\"equation-pro\" />\n\n## Plugins\n\n### `EquationPlugin`\n\nPlugin for block equation elements.\n\n### `InlineEquationPlugin`\n\nPlugin for inline equation elements.\n\n## Transforms\n\n### `tf.insert.equation`\n\n<API name=\"insert.equation\">\n<APIOptions type=\"InsertNodesOptions\">\n    Options for the insert nodes transform.\n</APIOptions>\n</API>\n\n### `tf.insert.inlineEquation`\n\nInserts an inline equation.\n\n<API name=\"insert.inlineEquation\">\n<APIParameters>\n  <APIItem name=\"texExpression\" type=\"string\" optional>\n    The LaTeX expression to insert. Empty equation if not provided.\n  </APIItem>\n  <APIItem name=\"options\" type=\"InsertNodesOptions\" optional>\n    Options for the insert nodes transform.\n  </APIItem>\n</APIParameters>\n</API>\n\n## Types\n\n### `TEquationElement`\n\n```typescript\ninterface TEquationElement extends TElement {\n  texExpression: string;\n}\n```",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(elements)/equation.mdx"
    }
  ]
}