{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "slash-command-docs",
  "type": "registry:file",
  "title": "Slash Command",
  "description": "Documentation for Slash Command",
  "files": [
    {
      "path": "../../docs/(plugins)/(functionality)/(combobox)/slash-command.mdx",
      "content": "---\ntitle: Slash Command\ndocs:\n  - route: https://pro.platejs.org/docs/examples/slash-command\n    title: Plus\n  - route: /docs/combobox\n    title: Combobox\n  - route: /docs/components/slash-node\n    title: Slash Nodes\n---\n\n<ComponentPreview name=\"slash-command-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Quick access to various editor commands\n- Triggered by `/` character\n- Keyboard navigation and filtering\n- Customizable command groups and options\n\n</PackageInfo>\n\n## Kit Usage\n\n<Steps>\n\n### Installation\n\nThe fastest way to add slash command functionality is with the `SlashKit`, which includes pre-configured `SlashPlugin` and `SlashInputPlugin` along with their [Plate UI](/docs/installation/plate-ui) components.\n\n<ComponentSource name=\"slash-kit\" />\n\n- [`SlashInputElement`](/docs/components/slash-node): Renders the slash command combobox with predefined options\n\n### Add Kit\n\n```tsx\nimport { createPlateEditor } from 'platejs/react';\nimport { SlashKit } from '@/components/editor/plugins/slash-kit';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    ...SlashKit,\n  ],\n});\n```\n\n</Steps>\n\n## Manual Usage\n\n<Steps>\n\n### Installation\n\n```bash\nnpm install @platejs/slash-command\n```\n\n### Add Plugins\n\n```tsx\nimport { SlashPlugin, SlashInputPlugin } from '@platejs/slash-command/react';\nimport { createPlateEditor } from 'platejs/react';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    SlashPlugin,\n    SlashInputPlugin,\n  ],\n});\n```\n\n### Configure Plugins\n\n```tsx\nimport { SlashPlugin, SlashInputPlugin } from '@platejs/slash-command/react';\nimport { createPlateEditor } from 'platejs/react';\nimport { SlashInputElement } from '@/components/ui/slash-node';\nimport { KEYS } from 'platejs';\n\nconst editor = createPlateEditor({\n  plugins: [\n    // ...otherPlugins,\n    SlashPlugin.configure({\n      options: {\n        trigger: '/',\n        triggerPreviousCharPattern: /^\\s?$/,\n        triggerQuery: (editor) =>\n          !editor.api.some({\n            match: { type: editor.getType(KEYS.codeBlock) },\n          }),\n      },\n    }),\n    SlashInputPlugin.withComponent(SlashInputElement),\n  ],\n});\n```\n\n- `options.trigger`: Character that triggers the slash command combobox (default: `/`)\n- `options.triggerPreviousCharPattern`: RegExp pattern for character before trigger\n- `options.triggerQuery`: Function to determine when slash commands should be enabled\n- `withComponent`: Assigns the UI component for the slash command interface\n\n</Steps>\n\n## Usage\n\nHow to use slash commands:\n\n1. Type `/` anywhere in your document to open the slash menu\n2. Start typing to filter options or use arrow keys to navigate\n3. Press Enter or click to select an option\n4. Press Escape to close the menu without selecting\n\nAvailable options include:\n- Text blocks (paragraphs, headings)\n- Lists (bulleted, numbered, to-do)\n- Advanced blocks (tables, code blocks, callouts)\n- Inline elements (dates, equations)\n\n<Callout type=\"info\">\n  Use keywords to quickly find options. For example, type '/ul' for Bulleted List or '/h1' for Heading 1.\n</Callout>\n\n## Plate Plus\n\n<ComponentPreviewPro name=\"slash-command-pro\" />\n\n## Plugins\n\n### SlashPlugin\n\nPlugin for slash command functionality. Extends [TriggerComboboxPluginOptions](/docs/combobox#triggercomboboxpluginoptions).\n\n<API name=\"SlashPlugin\">\n<APIOptions>\n  <APIItem name=\"trigger\" type=\"string\" optional>\n    Character that triggers slash command combobox.\n    - **Default:** `'/'`\n  </APIItem>\n  <APIItem name=\"triggerPreviousCharPattern\" type=\"RegExp\" optional>\n    RegExp to match character before trigger.\n    - **Default:** `/^\\s?$/`\n  </APIItem>\n  <APIItem name=\"createComboboxInput\" type=\"() => TComboboxInputElement\" optional>\n    Function to create combobox input element.\n    - **Default:** \n    ```tsx\n    () => ({\n      children: [{ text: '' }],\n      type: KEYS.slashInput,\n    });\n    ```\n  </APIItem>\n  <APIItem name=\"triggerQuery\" type=\"(editor: PlateEditor) => boolean\" optional>\n    Function to determine when slash commands should be enabled. Useful for disabling in certain contexts like code blocks.\n  </APIItem>\n</APIOptions>\n</API>\n\n### SlashInputPlugin\n\nHandles the input behavior for slash command insertion.\n",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(functionality)/(combobox)/slash-command.mdx"
    }
  ]
}