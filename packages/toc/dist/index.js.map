{"version":3,"sources":["../src/index.ts","../src/lib/BaseTocPlugin.ts","../src/lib/transforms/insertToc.ts","../src/lib/utils/isHeading.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './lib/index';\n","import {\n  type PluginConfig,\n  type SlateEditor,\n  createTSlatePlugin,\n  KEYS,\n} from 'platejs';\n\nimport type { Heading } from './types';\n\nexport type TocConfig = PluginConfig<\n  'toc',\n  {\n    isScroll: boolean;\n    topOffset: number;\n    queryHeading?: (editor: SlateEditor) => Heading[];\n  }\n>;\n\nexport const BaseTocPlugin = createTSlatePlugin<TocConfig>({\n  key: KEYS.toc,\n  node: { isElement: true, isVoid: true },\n  options: {\n    isScroll: true,\n    topOffset: 80,\n  },\n});\n","import type { InsertNodesOptions, SlateEditor, TElement } from 'platejs';\n\nimport { KEYS } from 'platejs';\n\nexport const insertToc = (\n  editor: SlateEditor,\n  options?: InsertNodesOptions\n) => {\n  editor.tf.insertNodes<TElement>(\n    {\n      children: [{ text: '' }],\n      type: editor.getType(KEYS.toc),\n    },\n    options as any\n  );\n};\n","import { type TNode, KEYS } from 'platejs';\n\nexport const isHeading = (node: TNode) => {\n  return node.type && KEYS.heading.includes(node.type as any);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAKO;AAaA,IAAM,oBAAgB,mCAA8B;AAAA,EACzD,KAAK,oBAAK;AAAA,EACV,MAAM,EAAE,WAAW,MAAM,QAAQ,KAAK;AAAA,EACtC,SAAS;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,EACb;AACF,CAAC;;;ACvBD,IAAAA,kBAAqB;AAEd,IAAM,YAAY,CACvB,QACA,YACG;AACH,SAAO,GAAG;AAAA,IACR;AAAA,MACE,UAAU,CAAC,EAAE,MAAM,GAAG,CAAC;AAAA,MACvB,MAAM,OAAO,QAAQ,qBAAK,GAAG;AAAA,IAC/B;AAAA,IACA;AAAA,EACF;AACF;;;ACfA,IAAAC,kBAAiC;AAE1B,IAAM,YAAY,CAAC,SAAgB;AACxC,SAAO,KAAK,QAAQ,qBAAK,QAAQ,SAAS,KAAK,IAAW;AAC5D;","names":["import_platejs","import_platejs"]}