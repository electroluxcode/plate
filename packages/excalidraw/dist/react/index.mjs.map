{"version":3,"sources":["../../src/react/ExcalidrawPlugin.tsx","../../src/lib/BaseExcalidrawPlugin.ts","../../src/react/hooks/useExcalidrawElement.ts"],"sourcesContent":["import { toPlatePlugin } from 'platejs/react';\n\nimport { BaseExcalidrawPlugin } from '../lib';\n\nexport const ExcalidrawPlugin = toPlatePlugin(BaseExcalidrawPlugin);\n","import { type TElement, createSlatePlugin, KEYS } from 'platejs';\n\nimport type { ExcalidrawDataState } from './types';\n\nexport interface TExcalidrawElement extends TElement {\n  data?: {\n    elements: ExcalidrawDataState['elements'];\n    state: ExcalidrawDataState['appState'];\n  } | null;\n}\n\n/** Enables support for Excalidraw drawing tool within a Slate document */\nexport const BaseExcalidrawPlugin = createSlatePlugin({\n  key: KEYS.excalidraw,\n  node: { isElement: true, isVoid: true },\n});\n","import React from 'react';\n\nimport type {\n  ExcalidrawImperativeAPI,\n  LibraryItems,\n} from '@excalidraw/excalidraw/types/types';\n\nimport type { TExcalidrawElement } from '../../lib';\nimport type { TExcalidrawProps } from '../types';\n\nexport const useExcalidrawElement = ({\n  element,\n  libraryItems = [],\n  scrollToContent = true,\n}: {\n  element: TExcalidrawElement;\n  libraryItems?: LibraryItems;\n  scrollToContent?: boolean;\n}) => {\n  const [Excalidraw, setExcalidraw] = React.useState<any>(null);\n  React.useEffect(() => {\n    void import('@excalidraw/excalidraw').then((comp) =>\n      setExcalidraw(comp.Excalidraw)\n    );\n  });\n\n  const _excalidrawRef = React.useRef<ExcalidrawImperativeAPI>(null);\n\n  // const editor = useEditorRef();\n\n  const excalidrawProps: TExcalidrawProps = {\n    autoFocus: false,\n    excalidrawRef: _excalidrawRef,\n    initialData: {\n      appState: element.data?.state,\n      elements: element.data?.elements,\n      libraryItems,\n      scrollToContent,\n    },\n    // onChange: (elements: readonly ExcalidrawElementType[], state: AppState) => {\n    // const path = editor.api.findPath(element);\n\n    // FIXME: setNodes triggers render loop as onChange is triggered on rerender\n    // in the meantime, the prop can be used to save the data outside slate\n    // editor.tf.setNodes({ data: { elements, state } }, { at: path });\n    // },\n  };\n\n  return {\n    Excalidraw,\n    excalidrawProps,\n  };\n};\n"],"mappings":";AAAA,SAAS,qBAAqB;;;ACA9B,SAAwB,mBAAmB,YAAY;AAYhD,IAAM,uBAAuB,kBAAkB;AAAA,EACpD,KAAK,KAAK;AAAA,EACV,MAAM,EAAE,WAAW,MAAM,QAAQ,KAAK;AACxC,CAAC;;;ADXM,IAAM,mBAAmB,cAAc,oBAAoB;;;AEJlE,OAAO,WAAW;AAUX,IAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA,eAAe,CAAC;AAAA,EAChB,kBAAkB;AACpB,MAIM;AACJ,QAAM,CAAC,YAAY,aAAa,IAAI,MAAM,SAAc,IAAI;AAC5D,QAAM,UAAU,MAAM;AACpB,SAAK,OAAO,wBAAwB,EAAE;AAAA,MAAK,CAAC,SAC1C,cAAc,KAAK,UAAU;AAAA,IAC/B;AAAA,EACF,CAAC;AAED,QAAM,iBAAiB,MAAM,OAAgC,IAAI;AAIjE,QAAM,kBAAoC;AAAA,IACxC,WAAW;AAAA,IACX,eAAe;AAAA,IACf,aAAa;AAAA,MACX,UAAU,QAAQ,MAAM;AAAA,MACxB,UAAU,QAAQ,MAAM;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;","names":[]}