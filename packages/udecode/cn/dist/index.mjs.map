{"version":3,"sources":["../src/cn.ts","../src/withProps.tsx","../src/withCn.tsx","../src/withVariants.tsx","../src/index.tsx"],"sourcesContent":["import type { CxOptions } from 'class-variance-authority';\n\nimport { cx } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\n\n/** Tailwind CSS classnames merge. */\nexport function cn(...inputs: CxOptions) {\n  return twMerge(cx(inputs));\n}\n","import React from 'react';\n\nimport { cn } from './cn';\n\n/**\n * Set default props with `React.forwardRef`.\n *\n * - Use `withCn` if only setting `className`\n */\nexport function withProps<T extends React.ElementType>(\n  Component: T,\n  defaultProps: Partial<React.ComponentPropsWithoutRef<T>>\n) {\n  const ComponentWithClassName = Component as React.FC<{ className?: string }>;\n\n  return React.forwardRef<\n    React.ComponentRef<T>,\n    React.ComponentPropsWithoutRef<T>\n  >(function ExtendComponent(props, ref) {\n    const newProps: any = { ...defaultProps, ...props };\n    const className = cn(\n      (defaultProps as any).className,\n      (props as any).className\n    );\n\n    if (className) {\n      newProps.className = className;\n    }\n\n    return <ComponentWithClassName ref={ref} {...newProps} />;\n  });\n}\n","import type React from 'react';\n\nimport type { CxOptions } from 'class-variance-authority';\n\nimport { cn } from './cn';\nimport { withProps } from './withProps';\n\n/**\n * Set default `className` with `cn`.\n *\n * - IntelliSense: add `withCn` to `classAttributes`\n * - ESLint: add `withCn` to `settings.tailwindcss.callees`\n */\nexport function withCn<T extends React.ComponentType<any>>(\n  Component: T,\n  ...inputs: CxOptions\n) {\n  return withProps(Component, { className: cn(inputs) } as any);\n}\n","import React from 'react';\n\nimport type { cva, VariantProps } from 'class-variance-authority';\n\nimport { cn } from './cn';\n\n/**\n * Set default `className` with `cn` and `variants`.\n *\n * @param Component - The component to which props will be added.\n * @param variants - Variants from `cva`. `Component` props will be extended\n *   with `variants` props.\n * @param onlyVariantsProps - Props to exclude from `Component`. Set the props\n *   that are only used for variants.\n */\nexport function withVariants<\n  T extends React.ElementType,\n  V extends ReturnType<typeof cva>,\n>(Component: T, variants: V, onlyVariantsProps?: (keyof VariantProps<V>)[]) {\n  return React.forwardRef<\n    React.ComponentRef<T>,\n    React.ComponentPropsWithoutRef<T> &\n      Omit<React.ComponentProps<T>, keyof VariantProps<V>> &\n      VariantProps<V>\n  >((props, ref) => {\n    const { className, ...rest } = props;\n    const variantProps = { ...rest } as VariantProps<V>;\n    const componentProps = { ...rest } as any;\n\n    if (onlyVariantsProps) {\n      onlyVariantsProps.forEach((key) => {\n        if (key in componentProps) {\n          delete componentProps[key as string];\n        }\n      });\n    }\n\n    return (\n      <Component\n        ref={ref}\n        className={cn(variants(variantProps), className)}\n        {...componentProps}\n      />\n    );\n  });\n}\n","/** @file Automatically generated by barrelsby. */\n\nexport * from './cn';\n\nexport * from './withCn';\n\nexport * from './withProps';\n\nexport * from './withVariants';\n\nexport * from '@udecode/react-utils';\n"],"mappings":";AAEA,SAAS,UAAU;AACnB,SAAS,eAAe;AAGjB,SAAS,MAAM,QAAmB;AACvC,SAAO,QAAQ,GAAG,MAAM,CAAC;AAC3B;;;ACRA,OAAO,WAAW;AASX,SAAS,UACd,WACA,cACA;AACA,QAAM,yBAAyB;AAE/B,SAAO,MAAM,WAGX,SAAS,gBAAgB,OAAO,KAAK;AACrC,UAAM,WAAgB,EAAE,GAAG,cAAc,GAAG,MAAM;AAClD,UAAM,YAAY;AAAA,MACf,aAAqB;AAAA,MACrB,MAAc;AAAA,IACjB;AAEA,QAAI,WAAW;AACb,eAAS,YAAY;AAAA,IACvB;AAEA,WAAO,oCAAC,0BAAuB,KAAW,GAAG,UAAU;AAAA,EACzD,CAAC;AACH;;;AClBO,SAAS,OACd,cACG,QACH;AACA,SAAO,UAAU,WAAW,EAAE,WAAW,GAAG,MAAM,EAAE,CAAQ;AAC9D;;;AClBA,OAAOA,YAAW;AAeX,SAAS,aAGd,WAAc,UAAa,mBAA+C;AAC1E,SAAOC,OAAM,WAKX,CAAC,OAAO,QAAQ;AAChB,UAAM,EAAE,WAAW,GAAG,KAAK,IAAI;AAC/B,UAAM,eAAe,EAAE,GAAG,KAAK;AAC/B,UAAM,iBAAiB,EAAE,GAAG,KAAK;AAEjC,QAAI,mBAAmB;AACrB,wBAAkB,QAAQ,CAAC,QAAQ;AACjC,YAAI,OAAO,gBAAgB;AACzB,iBAAO,eAAe,GAAa;AAAA,QACrC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WACE,gBAAAA,OAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,WAAW,GAAG,SAAS,YAAY,GAAG,SAAS;AAAA,QAC9C,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ,CAAC;AACH;;;ACnCA,cAAc;","names":["React","React"]}